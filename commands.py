import telegram
import utils
import db_utils

ACTION_SEPARATOR = '='


def start(update, context):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start

    :param update:
    :param context:
    :return:
    """
    keyboard = []
    for group in db_utils.getAllGroups():
        callback_data = 'set_group' + ACTION_SEPARATOR + group
        keyboard.append([telegram.InlineKeyboardButton(group, callback_data=callback_data)])

    reply_markup = telegram.InlineKeyboardMarkup(keyboard)
    update.message.reply_text('–ü—Ä–∏–≤–µ—Ç. –î–ª—è –Ω–∞—á–∞–ª–∞ –º–Ω–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Ç–≤–æ—é –≥—Ä—É–ø–ø—É', reply_markup=reply_markup)


def chooce_faculty(update, context):
    keyboard = []
    for faculty in db_utils.getAllFaculties():
        callback_data = 'choose_faculty_action' + ACTION_SEPARATOR + faculty
        keyboard.append([telegram.InlineKeyboardButton(faculty, callback_data=callback_data)])
    reply_markup = telegram.InlineKeyboardMarkup(keyboard)
    update.message.reply_text(db_utils.start_message, reply_markup=reply_markup)

def unsubscribe(update, context):
    chat_id = update['message']['chat_id']
    db_utils.unsubscribeUser(chat_id)
    keyboard = []
    keyboard.append([telegram.KeyboardButton("/start")])
    reply_markup = telegram.ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    context.bot.send_message(chat_id=chat_id, text="–î–æ –≤—Å—Ç—Ä–µ—á–∏ üëèÔ∏è", reply_markup=reply_markup)


def change_table(update, context):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /changetable
    –§–µ–π–∫–æ–≤–∞—è —Å–º–µ–Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ–º –æ–± —ç—Ç–æ–º

    :param update:
    :param context:
    :return:
    """

    db_utils.random_update()
    utils.notify_all(db_utils.getPushList())
    db_utils.cleanChangeList()

